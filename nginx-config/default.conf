# Default HTTPS/SSL server definition
server {
    listen [::]:4001 ssl default_server;
    listen 4001 ssl default_server;
    server_name _;

    ssl_certificate /etc/nginx/certificates/cert.pem;
    ssl_certificate_key /etc/nginx/certificates/privkey.pem;
    ssl_trusted_certificate /etc/nginx/certificates/chain.pem;

    # Upgrade security
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Encrypting protocols
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';

    root /app/www;

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to @nextjssite
        try_files $uri @nextjssite;

        expires max;
        access_log off;
    }

    location @nextjssite {
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        set $new_uri /groove$uri;
        proxy_pass http://127.0.0.1:3000$new_uri;
    }

    # Serve static files directly
    location ~* ^/(_next/(static|image))/ {
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        set $new_uri /groove$uri;
        proxy_pass http://127.0.0.1:3000$new_uri;
        expires 1d;
        access_log off;
    }

    # Set the cache-control headers on assets to cache for 5 days
    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
        expires 1d;
    }

    # Deny access to . files, for security
    location ~ /\. {
        log_not_found off;
        deny all;
    }
}

# Default HTTP server definition
server {
    listen [::]:4000;
    listen 4000;
    server_name _;

    root /app/www;

    return 301 https://$host$request_uri;
}